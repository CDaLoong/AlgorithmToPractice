// 放在开始
// 1. 严谨性判断，不允许任何报错
// 2. 任何递归程序，先写出口
// 3. 任何一种算法，都没有优劣之分，只有是否适合的场景

// 有两个数组，第一个数组内的每个对象都有两个端点属性，另一个数组内的对象存储着第一个数组内不同对象之间相连的关系，先要求根据两个数组生成之间相连的关系树，如图所示'./img/两个扁平化数组转树.png'
const dataArr = [
    {
        A: 'A',
    },{
        B1: 'B1',
        B2: 'B2' 
    },{
        C1: 'C1',
        C2: 'C2' 
    },{
        D1: 'D1',
        D2: 'D2' 
    },{
        E1: 'E1',
        E2: 'E2' 
    },{
        F: 'F',
    },{
        G1: 'G1',
        G2: 'G2' 
    },{
        H: 'H',
    }
]

const connArr = [
    {
        A: 'A',
        B: 'B1',
        C: 'C1'
    },{
        B: 'B2',
        D: 'D1',
        F: 'F'
    },{
        C: 'C2',
        E: 'E1',
    },{
        E: 'E2',
        G: 'G1',
        H: 'H'
    }
]